@page "/login"
@using Microsoft.AspNetCore.Identity
@layout EmptyLayout
@inherits LoginPage

<div class="login">
    <div class="login-head">
        <div class="login-logo">
            <a class="kui-logo" href="@Config.SiteUrl" target="_blank" style="position:initial;height:55px;"></a>
            <div class="kui-app-name">@Language["App.SubTitle"]</div>
        </div>
        <TopRightMenu>
            <li><a href="@Config.SiteUrl/doc" target="_blank">@Language["Document"]</a></li>
        </TopRightMenu>
    </div>
    <div class="login-body" style="background-image:url(img/login.jpg);">
        <div class="login-left">
            <ul>
                <li>@Language["OpenSource"]</li>
                <li>@Language["LowCode"]</li>
                <li>@Language["ModernUI"]</li>
            </ul>
            <img src="img/login.png" />
        </div>
        <div class="login-form">
            <div class="login-form-body">
                <LoginForm Model="Model" OnLogin="OnUserLogin" />
            </div>
        </div>
    </div>
    <div class="login-copyright"><PageFooter /></div>
</div>

@code {
    [CascadingParameter] private HttpContext HttpContext { get; set; }

    protected override async Task OnInitAsync()
    {
        await base.OnInitAsync();
    
        if (HttpMethods.IsGet(HttpContext.Request.Method))
        {
            // Clear the existing external cookie to ensure a clean login process
            await HttpContext.SignOutAsync(IdentityConstants.ApplicationScheme);
        }

        Model.UserName = "Admin";
        Model.Password = "888888";
    }

    protected override void OnLogined(UserInfo user)
    {
        var url = Context.IsMobileApp ? "/app" : (ReturnUrl ?? "/");
        HttpContext.Response.Redirect(url);
    }

    private Task<Known.Result> OnSendSMS(string phone)
    {
        return Known.Result.SuccessAsync(phone);
    }
}